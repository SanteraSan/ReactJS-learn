{"version":3,"sources":["Content/Style.module.css","Content/img/Spinner-1s-200px.svg","Content/Dialogs/Dialog_Items/dialog_items.module.css","Content/Users/Users.module.css","Content/Common/FormsControls/formControl.module.css","Content/navigation/friends/friends.jsx","Content/navigation/friends/AvaFriendContainer.jsx","Content/navigation/Navigate.jsx","Content/News/News.jsx","Content/Settings/Settings.jsx","api/api.js","Redux/users_reducer.js","Content/Common/Paginator/Paginator.jsx","Content/Users/Users.jsx","Content/Common/Preloader/Preloader.jsx","Redux/user_selectors.js","Content/Users/UsersContainer.jsx","Content/Common/FormsControls/FormsControls.jsx","Content/Profile/LogoInfo/EditProfileInfoForm.jsx","Content/Profile/LogoInfo/info.jsx","Content/Profile/LogoInfo/logo.jsx","Redux/profile_reducer.js","Content/Profile/LogoInfo/ProfileStatusWithHook.js","Content/Profile/LogoInfo/ProfileStatusContainer.jsx","Content/Profile/LogoInfo/LogoInfo.jsx","Content/Profile/posts/Post.jsx","Content/Utils/Validators/validators.js","Content/Profile/posts/MyPosts.jsx","Content/Profile/posts/MyPostsContainer.jsx","Content/Profile/Profile.jsx","hoc/withAuthRedirect.jsx","Redux/profile_selector.js","Redux/auth_selectors.js","Content/Profile/ProfileContainer.jsx","Redux/auth_reducer.js","Content/Login/login.jsx","Redux/dialog_reducer.js","Content/Dialogs/messages/mesage_item/message_item.jsx","Content/Dialogs/messages/messages.jsx","Content/Dialogs/messages/DialogsMessagesContainer.jsx","Content/Dialogs/Dialog_Items/items/item_dialog.jsx","Content/Dialogs/Dialog_Items/dialog_items.jsx","Content/Dialogs/Dialog_Items/DialogsItemsContainer.jsx","Content/Dialogs/DialogsContainer.jsx","Content/Dialogs/Dialogs.jsx","Content/Profile/ProfileContainerWithHook.jsx","Content/Content.jsx","Content/Header/Header.jsx","Content/Header/HeaderComponent.jsx","Redux/app_reducer.js","App.js","Redux/redux-store.js","serviceWorker.js","index.js","Content/Dialogs/Dialog.module.css","Content/Profile/LogoInfo/info_logo.module.css","Content/Dialogs/Dialog_Items/items/item_dialog.module.css","Content/Profile/profile.module.css","Content/Profile/posts/post.module.css","Content/img/png-transparent-computer-icons-user-icon-design-help-portal-computer-orange-sphere.png","Content/navigation/nav.module.css","Content/Header/Header.module.css"],"names":["module","exports","AvaFriend","props","className","s","avatar","imgLink","to","dialogs","link","img","AvaFriendContainer","connect","state","dialogsPage","Navigation","n","navigat","item","prof","activeClassName","active","message","news","music","settings","friends","friendsItems","News","Settings","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unfollow","userId","delete","follow","post","authMe","console","warn","authAPI","getProfile","profileAPI","login","email","password","rememberMe","logout","getStatus","updateStatus","status","put","saveProfile","profile","savePhoto","photoFile","formData","FormData","append","initialState","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","action","map","u","id","followed","currentCount","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","Users","container","wrapper","logo_button","src","photos","small","userPhoto","alt","disabled","some","user_info","user_name_status","name","location","Preloader","preloader","getAllUsers","usersPage","getPageSize","getTotalUserCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersApiComponent","this","log","React","Component","bind","page","items","totalCount","TextArea","input","meta","hasError","touched","error","formControl","undefined","textAreaProfile","Input","createFields","placeholder","validators","components","text","Field","validate","component","ReduxFormProfileInfo","reduxForm","form","handleSubmit","goEditMode","infoProfile","onSubmit","lookingForAJob","Object","keys","contacts","m","contactTitle","contactValue","ProfileData","isOwner","fullName","aboutMe","lookingForAJobDescription","Contact","InfoProfile","editMode","setEditMode","initialValues","LogoProfile","visibility","styles","setStyles","imaga","large","imagePhoto","style","onChange","e","target","files","length","posts","greet","likeCounts","textAreaValue","setStatus","getProfileData","profileReducer","newPost","profileAddPost","likeCount","stateCopy","newText","ProfileStatusWithHook","useEffect","onDoubleClick","currentTarget","value","autoFocus","onBlur","profilePage","LogoInfo","profileName","logoInfoContainer","Post","required","maxLength","max","maxLength15","NewPostProfileForm","memo","MyPosts","postsElements","myPosts","addPost","PostContainer","updateNewPost","Profile","LogoInfoPosts","MyPostsContainer","mapStateToProps","isAuth","auth","getProfileStatus","getAuthUserId","ProfileContainer","match","params","authorizeUserId","PureComponent","compose","withRouter","RedirectComponent","setAuthUserData","payload","letsAuth","authReducer","LoginForm","formSummaryError","messageError","messages","stopSubmit","_error","dialogReducer","newMessage","textareaName","Message","home","guest","maxLength50","AddMessageForm","Messages","values","addMessages","DialogsMessagesContainer","updateNewMessageActionCreator","addMessageActionCreator","Items","textLink","Dialogs_items","DialogsItemsContainer","AuthRedirectComponent","file","getState","userServ","userAuth","Content","content","path","render","DialogsContainer","UsersContainer","Header","header","login_block","HeaderContainer","initialize","appReducer","App","setInitializeSuccess","app","promise","Promise","all","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6ecb0dbd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Style_content__16A4z\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.9064981b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"dialog_items_items__OW-C5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__1gahj\",\"wrapper\":\"Users_wrapper__1Qwy1\",\"logo_button\":\"Users_logo_button__1sJlv\",\"user_info\":\"Users_user_info__1g6w2\",\"user_name_status\":\"Users_user_name_status__3j-ZG\",\"name\":\"Users_name__1JVTp\",\"status\":\"Users_status__mVXmE\",\"location\":\"Users_location__-b0Fd\",\"selectedPage\":\"Users_selectedPage__2muMN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formControl_formControl__2dxy4\",\"error\":\"formControl_error__31xUb\",\"formSummaryError\":\"formControl_formSummaryError__2khT-\",\"textAreaProfile\":\"formControl_textAreaProfile__3wswq\"};","import s from \"./../nav.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n// import Avatar from \"./avatar\";\r\n\r\nconst AvaFriend = (props) => {\r\n    // let Avas = props.state.map(i => <Avatar id={i.id} name={i.name} link={i.link} img={i.img}/>)\r\n    return (\r\n        <div className={s.avatar}>\r\n            {/*{Avas}*/}\r\n            <NavLink className={s.imgLink} to={\"/dialogs/\" + props.dialogs[0].link}>{props.dialogs[0].img}</NavLink>\r\n            <NavLink className={s.imgLink} to={\"/dialogs/\" + props.dialogs[1].link}>{props.dialogs[1].img}</NavLink>\r\n            <NavLink className={s.imgLink} to={\"/dialogs/\" + props.dialogs[2].link}>{props.dialogs[2].img}</NavLink>\r\n        </div>)\r\n};\r\nexport default AvaFriend","import {connect} from \"react-redux\";\r\nimport AvaFriend from \"./friends\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n\r\n    }\r\n};\r\n\r\n// const AvaFriendContainer = () => {\r\n//     return (<div>\r\n//         {<AvaFriend state={props.state.dialogsPage.dialogs[0]} />}\r\n//         {<AvaFriend state={props.state.dialogsPage.dialogs[1]}/>}\r\n//         {<AvaFriend state={props.state.dialogsPage.dialogs[2]}/>}\r\n//     </div>)\r\n// };\r\nconst AvaFriendContainer = connect(mapStateToProps)(AvaFriend);\r\n\r\nexport default AvaFriendContainer","import React from \"react\";\r\nimport n from \"./nav.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport AvaFriendContainer from \"./friends/AvaFriendContainer\";\r\n\r\nconst Navigation = () =>\r\n    <div className={n.navigat}>\r\n        <div className={`${n.item} ${n.prof}`}><NavLink activeClassName={n.active} to=\"/profile\">Profile</NavLink></div>\r\n        <div className={`${n.message} ${n.item}`}><NavLink activeClassName={n.active} to=\"/dialogs\">Message</NavLink>\r\n        </div>\r\n        <div className={`${n.news} ${n.item}`}><NavLink activeClassName={n.active} to=\"/users\">User</NavLink></div>\r\n        <div className={`${n.news} ${n.item}`}><NavLink activeClassName={n.active} to=\"/news\">News</NavLink></div>\r\n        <div className={`${n.music} ${n.item}`}><NavLink activeClassName={n.active} to=\"/music\">Music</NavLink></div>\r\n        <div className={`${n.settings} ${n.item}`}><NavLink activeClassName={n.active} to=\"/settings\">Settings</NavLink>\r\n        </div>\r\n        <div className={`${n.friends}`}>\r\n            <NavLink to={\"/friends\"}><h3>Friends</h3></NavLink>\r\n            <div className={n.friendsItems}>\r\n                <AvaFriendContainer/>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n\r\nexport default Navigation","import React from \"react\";\r\n\r\nconst News = () =>\r\n    <div className=\"News\">\r\n        News\r\n    </div>\r\n;\r\nexport default News","import React from \"react\";\r\nimport s from \"./Settings.modele.css\"\r\n\r\nconst Settings = () =>\r\n    <div className={s.Settings}>\r\n        Settings\r\n    </div>\r\n;\r\nexport default Settings","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\"API-KEY\": \"85c04d1a-48ca-445a-a2aa-989c2ecde80d\"}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    authMe() {\r\n        console.warn('Obsolete method. Please use profileAPI object');\r\n        return authAPI.authMe()\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object');\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n};\r\n\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`,{email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status:status})\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile/`, profile)\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\",photoFile);\r\n        return instance.put(`profile/photo`, formData)\r\n    }\r\n};","import {usersAPI} from \"../api/api\";\r\n\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_CURRENT_COUNT = \"SET_CURRENT_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u =>\r\n                    u.id === action.userId ? {...u, followed: true} : u)\r\n            };\r\n                /*users:updateObjectInArray(state.users,\"id\",action.userId,{followed:true})};*/\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u =>\r\n                    u.id === action.userId ? {...u, followed: false} : u)\r\n            };\r\n                /*users:updateObjectInArray(state.users,\"id\",action.userId,{followed:false})};*/\r\n        case SET_USERS: {\r\n            return {...state, users: action.users};\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage};\r\n        }\r\n        case SET_CURRENT_COUNT: {\r\n            return {...state, totalUsersCount: action.currentCount};\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching};\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id !== action.userId)]\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (currentCount) => ({type: SET_CURRENT_COUNT, currentCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n\r\n    }\r\n};\r\nlet followUnfollowFlow = async (dispatch,userId,apiMethod,actionCreator) =>{\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        debugger;\r\n        followUnfollowFlow(dispatch,userId,usersAPI.follow.bind(usersAPI),followSuccess);\r\n    }\r\n};\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        debugger;\r\n        followUnfollowFlow(dispatch,userId,usersAPI.unfollow.bind(usersAPI),unfollowSuccess);\r\n    }\r\n};\r\n\r\n\r\nexport default usersReducer;\r\n","import s from \"../../Users/Users.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport cn from \"classnames\"\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={s.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n            {pages.filter(p => p>=leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={cn({[s.selectedPage]:currentPage === p},s.pageNumber)}\r\n                             key={p}\r\n                             onClick={() => {\r\n                                 onPageChanged(p)\r\n                             }}> {p}</span>\r\n            })}\r\n            {portionCount > portionNumber &&\r\n            <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n        </div>)\r\n};\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"../img/png-transparent-computer-icons-user-icon-design-help-portal-computer-orange-sphere.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\n\r\nlet Users = (props) => {\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <Paginator totalItemsCount={props.totalUsersCount}\r\n                       currentPage={props.currentPage}\r\n                       pageSize={props.pageSize}\r\n                       onPageChanged={props.onPageChanged}/>\r\n            {\r\n                props.users.map(u => <div key={u.id} className={s.wrapper}>\r\n                    <div className={s.logo_button}>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img src={u.photos.small != null ? u.photos.small : userPhoto} alt={'imaga must be here'}/>\r\n                        </NavLink>\r\n                        <div>{u.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.unfollow(u.id)\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.follow(u.id)\r\n                            }}>Follow</button>}\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.user_info}>\r\n                        <div className={s.user_name_status}>\r\n                            <div className={s.name}>{u.name}</div>\r\n                            <div className={s.status}>{u.status}</div>\r\n                        </div>\r\n                        <div className={s.location}>\r\n                            <span>{\"u.location.Country\"},</span><br/>\r\n                            <span>{\"u.location.City\"}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            }\r\n        </div>)\r\n};\r\n\r\nexport default Users","import preloader from \"../../img/Spinner-1s-200px.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = () => {\r\n    return (<div>\r\n        <img src={preloader} alt=\"\"/>\r\n    </div>)\r\n};\r\n\r\nexport default Preloader","\r\n\r\nexport const getAllUsers = (state) => {\r\n    return state.usersPage.users\r\n};\r\n// export const getAllUsers = createSelector(getUsers, users => {\r\n//     return users\r\n// });\r\n\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\nexport const getTotalUserCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n};\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n};\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {follow, getUsers, setCurrentPage, toggleFollowingProgress, unfollow} from \"../../Redux/users_reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {\r\n    getAllUsers,\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUserCount\r\n} from \"../../Redux/user_selectors\";\r\n\r\n\r\nclass UsersApiComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    };\r\n\r\n    render() {\r\n        console.log(\"render users\");\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     };\r\n    let mapStateToProps = (state) => {\r\n    console.log(\"mSTP users\");\r\n    return {\r\n        users: getAllUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUserCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow, unfollow,\r\n    setCurrentPage, toggleFollowingProgress,\r\n    getUsers})(UsersApiComponent);\r\n\r\n","import React from \"react\";\r\nimport s from \"./formControl.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const TextArea = ({input,meta, ...props}) => {\r\n    let hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={hasError ? s.formControl + \" \" + s.error : undefined }>\r\n            <textarea className={s.textAreaProfile}   {...input} {...props}/><br/>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n};\r\nexport const Input = ({input,meta, ...props}) => {\r\n    let hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={hasError ? s.formControl + \" \" + s.error : undefined }>\r\n            <input   {...input} {...props}/><br/>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport const createFields = (placeholder,name,validators,components,props={},text=\"\") =>\r\n    (<div>\r\n        <Field placeholder={placeholder} name={name}\r\n            validate={validators}\r\n            component={components}\r\n            {...props}/> {text}\r\n    </div>);\r\n","import React from \"react\";\r\nimport {Contact} from \"./info\";\r\nimport s from \"../../Common/FormsControls/formControl.module.css\";\r\nimport {createFields, Input, TextArea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst EditProfileInfoForm = ({handleSubmit, profile, goEditMode}) => {\r\n\r\n    return (\r\n        <div className={s.infoProfile}>\r\n            {profile ? <form onSubmit={handleSubmit}>\r\n                <button>Save</button>\r\n                <button onClick={goEditMode}>close edit</button>\r\n                <b>FullName</b> : {createFields('full name', 'fullName', [], Input)} <br/>\r\n                <b>Looking for a job</b> : {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n                <Field name=\"lookingForAJob\" component=\"input\" type=\"checkbox\"/><br/>\r\n                <b>lookingForAJobDescription</b> :\r\n                {createFields('lookingForAJobDescription',\r\n                    'lookingForAJobDescription', [], TextArea)}\r\n                <b>About me</b> : {createFields('About Me', 'aboutMe', [], Input)}\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(m => {\r\n                return <Contact key={m} contactTitle={m} contactValue={profile.contacts[m]}/>\r\n            })}\r\n            </form> : null}\r\n        </div>)\r\n};\r\n\r\nconst ReduxFormProfileInfo = reduxForm({form: 'Edit-profile-info'})(EditProfileInfoForm);\r\n\r\nexport default ReduxFormProfileInfo","import React, {useEffect, useState} from \"react\";\r\nimport s from './info_logo.module.css'\r\nimport EditProfileInfoForm from \"./EditProfileInfoForm\";\r\n\r\nconst InfoProfile = (props) => {\r\n\r\n\r\n    const [editMode,setEditMode] = useState(false)\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {editMode\r\n                ? <EditProfileInfoForm initialValues={props.profile} goEditMode={()=>{setEditMode(false)}} profile={props.profile} onSubmit={onSubmit}/>\r\n                : <ProfileData goEditMode={()=>{setEditMode(true)}} profile={props.profile} isOwner={props.isOwner}/>}\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goEditMode}) => {\r\n    return (\r\n        <div className={s.infoProfile}>\r\n            {isOwner ? <button onClick={goEditMode}>edit mode</button> : null}\r\n            {profile ? <div>\r\n                <b>FullName</b> : {profile.fullName} <br/>\r\n                <b>Looking for a job</b> : {profile.lookingForAJob ? \"yes\" : \"no\"}<br/>\r\n                <b>About me</b>: {profile.aboutMe}<br/>\r\n                <b>Professional skills</b>: {profile.lookingForAJobDescription}<br/>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(m => {\r\n                return <Contact key={m} contactTitle={m} contactValue={profile.contacts[m]}/>\r\n            })}\r\n            </div> : null}\r\n        </div>)\r\n};\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contacts}>\r\n        <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n};\r\nexport default InfoProfile","import React, {useState} from \"react\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport imagePhoto from '../../img/png-transparent-computer-icons-user-icon-design-help-portal-computer-orange-sphere.png'\r\nimport s from './info_logo.module.css'\r\n\r\nconst LogoProfile = (props) => {\r\n\r\n    let [styles,setStyles] = useState({visibility:'hidden'});\r\n    let visor = () =>{\r\n        setStyles({visibility: 'visible'})\r\n    };\r\n\r\n\r\n    if (!props.profile){\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) =>{\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n    return(<div>\r\n        <img className={s.imaga} onClick={visor} src={props.profile.photos.large || imagePhoto} alt=\"\"/><br/>\r\n        {props.isOwner && <input style={styles} type={\"file\"} onChange={onMainPhotoSelected} />}\r\n        </div>\r\n)};\r\n    export default LogoProfile","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\n\r\nconst UPDATER_NEW_POST = \"UPDATE-NEW-POST-TEXT\";\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USERS_PROFILE = \"SET_USERS_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\r\nconst SAVE_PROFILE_SUCCESS = \"SAVE_PROFILE_SUCCESS\";\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            greet: \"hello\",\r\n            likeCounts: 15,\r\n\r\n        },\r\n        {\r\n            id: 2,\r\n            greet: \"hi\",\r\n            likeCounts: 20,\r\n        }\r\n    ],\r\n    textAreaValue: \"some text\",\r\n    profile: null,\r\n    status: \"Please Sign in https://social-network.samuraijs.com\"\r\n\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 3,\r\n                greet: action.profileAddPost,\r\n                likeCount: 0,\r\n            };\r\n            let stateCopy = {...state};\r\n            stateCopy.posts = [...state.posts, newPost];\r\n            // stateCopy.posts.push(newPost);\r\n            stateCopy.textAreaValue = \"\";\r\n            return stateCopy;\r\n        }\r\n        case SET_USERS_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        }\r\n        case UPDATER_NEW_POST: {\r\n                let stateCopy = {...state};\r\n                stateCopy.textAreaValue = action.newText;\r\n                return stateCopy;\r\n            }\r\n        default:\r\n            return state;\r\n        }\r\n    }\r\n    ;\r\n\r\n    export const addPost = (profileAddPost) => ({type: ADD_POST, profileAddPost});\r\n    export const updateNewPost = (text) => ({type: UPDATER_NEW_POST, newText: text});\r\n    export const setUserProfile = (profile) => ({type: SET_USERS_PROFILE, profile});\r\n    export const setStatus = (status) => ({type: SET_STATUS, status});\r\n    export const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n    export const saveProfileSuccess = (profile) => ({type: SAVE_PROFILE_SUCCESS, profile});\r\n\r\n\r\n    export const getProfileData = (userId) => {\r\n        return (dispatch) => {\r\n            usersAPI.getProfile(userId).then(response => {\r\n                dispatch(setUserProfile(response.data));\r\n            })\r\n        }\r\n    };\r\n    export const getStatus = (userId) => {\r\n        return (dispatch) => {\r\n            profileAPI.getStatus(userId).then(response => {\r\n                dispatch(setStatus(response.data));\r\n            });\r\n        }\r\n\r\n    };\r\n    export const updateStatus = (status) => {\r\n        return (dispatch) => {\r\n            profileAPI.updateStatus(status).then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setStatus(status))\r\n                }\r\n            })\r\n        }\r\n    };\r\n    export const savePhoto = (file) => {\r\n        return async (dispatch) => {\r\n            let response = await profileAPI.savePhoto(file);\r\n\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(savePhotoSuccess(response.data.data.photos))\r\n            }\r\n\r\n        }\r\n    };\r\n    export const saveProfile = (profile) => {\r\n        return async (dispatch, getState) => {\r\n            const userId = getState().auth.userId;\r\n            const response = await profileAPI.saveProfile(profile);\r\n            debugger;\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getProfileData(userId))\r\n            }\r\n\r\n        }\r\n    };\r\n\r\n\r\n    export default profileReducer;\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n\r\n\r\n    // deactivateEditMode = () => {\r\n    //     (this.state.status === \"\") ?\r\n    //         this.setState({\r\n    //             status: \"Hey Hey!!!\",\r\n    //             editMode:false\r\n    //         }) :\r\n    //         this.setState({\r\n    //             editMode: false\r\n    //         });\r\n    //     this.props.updateStatus(this.state.status)\r\n    // };\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    useEffect(() =>{\r\n        setStatus(props.status);},\r\n        [props.status]);\r\n\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n        debugger;\r\n    };\r\n    const changeStatus = (e) => {\r\n        setStatus(e.currentTarget.value\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status}</span>\r\n            </div>}\r\n\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={changeStatus} value={status} autoFocus={true} onBlur={deactivateEditMode}/>\r\n            </div>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default ProfileStatusWithHook;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateStatus} from \"../../../Redux/profile_reducer\";\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\n\r\n\r\nfunction ProfileStatusContainer(props) {\r\n    return <ProfileStatusWithHook status={props.status} updateStatus={props.updateStatus}/>}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    status: state.profilePage.status\r\n});\r\n\r\nexport default connect(mapStateToProps, {updateStatus})(ProfileStatusContainer)","import React from \"react\";\r\nimport InfoProfile from \"./info\";\r\nimport LogoProfile from \"./logo\";\r\nimport s from \"./info_logo.module.css\"\r\nimport ProfileStatusContainer from \"./ProfileStatusContainer\";\r\n\r\nconst LogoInfo = (props) => {\r\n    // debugger;\r\n\r\n    return (\r\n        <div className={\"info_logo\"}>\r\n            {props.profile &&\r\n            <h2 className={s.profileName}>{props.profile.fullName}</h2>}\r\n            <div className={s.logoInfoContainer}>\r\n            <LogoProfile savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile}/>\r\n            <InfoProfile profile={props.profile} isOwner={props.isOwner} saveProfile={props.saveProfile}/>\r\n            </div>\r\n            <ProfileStatusContainer/>\r\n        </div>);\r\n};\r\n\r\nexport default LogoInfo","import React from \"react\";\r\nimport style from \"../posts/post.module.css\"\r\n\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return (<div className={style.post}>\r\n        <img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\" alt=\"\"/>\r\n        {props.message}<br/>\r\n        <span>like</span>\r\n        {props.likeCounts}\r\n    </div>);\r\n};\r\nexport default Post","export const required = value =>{\r\n    if (value) return undefined;\r\n    return \"Field is required\"\r\n};\r\n\r\nexport const maxLength = (max) => value =>{\r\n    if (value.length > max) return `Max length is ${max} symbols`;\r\n    return undefined\r\n};\r\n\r\n","import React from \"react\";\r\nimport Post from \"./Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport s from \"./post.module.css\"\r\nimport {maxLength, required} from \"../../Utils/Validators/validators\";\r\nimport {TextArea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\n\r\n// const MyPosts = (props) => {\r\n//     // debugger;\r\n//\r\n//     let postsElements = props.posts.map(p => <Post message={p.greet} likeCounts={p.likeCounts}/>);\r\n//\r\n//     let newPostElement = React.createRef();\r\n//\r\n//     let onAddPosts =() => {\r\n//         props.textAreaValue === '' ? alert(\"Empty post\") : props.addPost();\r\n//     };\r\n//\r\n//     let textAreaChanger = () =>{\r\n//         let text = newPostElement.current.value;\r\n//         props.updateNewPost(text);}\r\n//     ;\r\n//     return (\r\n//         <div className={s.myPosts}>\r\n//             <h3>My Posts</h3> <br/>\r\n//             <textarea onChange={textAreaChanger} ref={newPostElement} value={props.textAreaValue}/><br/>\r\n//             <button onClick={onAddPosts} type=\"submit\">Опубликовать</button>\r\n//             {postsElements}\r\n//         </div>);\r\n// };\r\n\r\nconst maxLength15 = maxLength(15);\r\n\r\nlet NewPostProfileForm = React.memo((props) => {\r\n\r\n    const {handleSubmit} = props;\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={s.some}>\r\n                <Field component={TextArea} name=\"profileAddPost\" placeholder=\"Enter you message\"\r\n                       validate={[required, maxLength15]}\r\n                />\r\n            </div>\r\n            <button>Отправить</button>\r\n        </form>)\r\n\r\n});\r\n\r\n\r\nNewPostProfileForm = reduxForm({form: 'profileForm'})(NewPostProfileForm);\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.greet} likeCounts={p.likeCounts}/>);\r\n    let onAddPosts = (value) => {\r\n        props.addPost(value.profileAddPost);\r\n    };\r\n\r\n    return <div className={s.myPosts}>\r\n        <h3>My Posts</h3>\r\n        <NewPostProfileForm onSubmit={onAddPosts}/><br/>\r\n        {postsElements}\r\n    </div>\r\n};\r\n\r\nexport default MyPosts","import MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPost, updateNewPost} from \"../../../Redux/profile_reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        textAreaValue: state.profilePage.textAreaValue,\r\n        posts:state.profilePage.posts\r\n    }\r\n};\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         updateNewPostActionCreator: (text) => {\r\n//             dispatch(updateNewPost(text))\r\n//         },\r\n//         addPost: () => {\r\n//             dispatch(addPost());\r\n//         }\r\n//     }\r\n// };\r\n\r\n\r\nconst PostContainer = connect(mapStateToProps, {addPost, updateNewPost})(MyPosts);\r\n\r\nexport default PostContainer","import React from \"react\";\r\nimport LogoInfo from \"./LogoInfo/LogoInfo\";\r\nimport style from \"./profile.module.css\"\r\nimport MyPostsContainer from \"./posts/MyPostsContainer\";\r\n\r\nconst Profile = (props) =>{\r\n\r\n    return(<div className={style.prof}>\r\n\r\n        <div className={style.LogoInfoPosts}>\r\n            <LogoInfo saveProfile={props.saveProfile} profile={props.profile} isOwner={props.isOwner} savePhoto={props.savePhoto}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    </div>)}\r\n;\r\nexport default Profile","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (this.props.isAuth===false) return <Redirect to={\"/login\"} />;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect (mapStateToProps)(RedirectComponent);\r\n};\r\n\r\n","export const getProfile = (state) =>{\r\n    return state.profilePage.profile\r\n};\r\nexport const getProfileStatus = (state) =>{\r\n    return state.profilePage.status\r\n};\r\n","export const getAuthUserId = (state) =>{\r\n    return state.auth.userId;\r\n};","import React, {PureComponent} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getProfileData, getStatus, updateStatus} from \"../../Redux/profile_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {getProfile, getProfileStatus} from \"../../Redux/profile_selector\";\r\nimport {getAuthUserId} from \"../../Redux/auth_selectors\";\r\n\r\nclass ProfileContainer extends PureComponent {\r\n\r\n    componentDidMount(){\r\n        // debugger;\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizeUserId;\r\n        }\r\n        this.props.getProfileData(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    render()\r\n    {\r\n        console.log(\"render prof\");\r\n    return (\r\n        <Profile {...this.props}/>\r\n    )}\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    console.log(\"mSTP\");\r\n    return({\r\n    profile: getProfile(state),\r\n    status: getProfileStatus(state),\r\n    authorizeUserId:getAuthUserId(state)\r\n})};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getStatus, updateStatus,getProfileData}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)","import {authAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n    if (action.type === SET_USER_DATA) {\r\n        return {\r\n            ...state, ...action.payload\r\n        };\r\n    } else {\r\n        return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, login, email, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, login, email, isAuth}\r\n});\r\nexport const letsAuth = () => async (dispatch) => {\r\n    let response = await usersAPI.authMe();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, login, email, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) =>\r\n    async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(letsAuth())\r\n        } else {\r\n            let messageError = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n            dispatch(stopSubmit(\"loginPage\", {_error: messageError}))\r\n        }\r\n    };\r\n\r\nexport const logout = () =>\r\n    async (dispatch) => {\r\n        let response = await authAPI.logout();\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    };\r\n\r\n\r\nexport default authReducer\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../Utils/Validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/auth_reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from \"./../Common/FormsControls/formControl.module.css\"\r\n\r\nlet LoginForm = props => {\r\n    // const {handleSubmit} = props;\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field validate={[required]} name=\"email\" component={Input} placeholder={\"Email\"}/></div>\r\n            <div><Field validate={[required]} name=\"password\" component={Input} placeholder={\"Password\"} type={\"password\"}/></div>\r\n            <div><Field name=\"rememberMe\" component=\"input\" type={\"checkbox\"}/>remember me</div>\r\n            {props.error && <div className={s.formSummaryError}>{props.error}</div>}\r\n            <div>\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>)\r\n};\r\n\r\nLoginForm = reduxForm({\r\n    form: 'loginPage'\r\n})(LoginForm);\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe )\r\n    };\r\n    if (props.isAuth){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginForm onSubmit={onSubmit} />\r\n    </div>\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) =>({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps,{login})(Login);","import React from \"react\";\r\n\r\nconst ADD_MESSAGE = \"ADD-MESSAGE\";\r\nconst UPDATER_NEW_MESSAGE = \"UPDATE-NEW-MESSAGE-TEXT\";\r\n\r\nlet initialState = {\r\n    messages: [\r\n\r\n        {id: 1, message: \"Hi\"},\r\n        {\r\n            id: 2,\r\n            message: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. At atque blanditiis distinctio dolorum eaque,\\n\" +\r\n                \"                et expedita fuga hic in ipsa laboriosam minus nam quam quos rerum similique, tempore tenetur voluptatem?\"\r\n        },\r\n        {id: 3, message: \"Yo!!!!\"},\r\n    ],\r\n    // textAreaValue: \"some text\",\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: \"Kirill\",\r\n            link: 1,\r\n            img: <img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\" alt=\"\"/>,\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Sasha\",\r\n            link: 2,\r\n            img: <img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\" alt=\"\"/>\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Gulshatka\",\r\n            link: 3,\r\n            img: <img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\" alt=\"\"/>\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Yurasya\",\r\n            link: 4,\r\n            img: <img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\" alt=\"\"/>\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Svetlanka\",\r\n            link: 5,\r\n            img: <img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\" alt=\"\"/>\r\n        },\r\n        {\r\n            id: 6,\r\n            name: \"Mishanya\",\r\n            link: 6,\r\n            img: <img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\" alt=\"\"/>\r\n        },\r\n        {\r\n            id: 7,\r\n            name: \"Dimon\",\r\n            link: 7,\r\n            img: <img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\" alt=\"\"/>\r\n        },\r\n    ]\r\n};\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id: 4,\r\n                message: action.textareaName\r\n            };\r\n            let stateCopy = {...state};\r\n            // stateCopy.textAreaValue = \"\";\r\n            stateCopy.messages = [...state.messages];\r\n            stateCopy.messages.push(newMessage);\r\n            return stateCopy;\r\n        // case UPDATER_NEW_MESSAGE:{\r\n            // let stateCopy = {...state};\r\n            // stateCopy.textAreaValue = action.newMessage;\r\n            // return stateCopy;}\r\n    default:return state;\r\n    }\r\n};\r\n\r\nexport const addMessageActionCreator = (textareaName) => ({type: ADD_MESSAGE,textareaName});\r\nexport const updateNewMessageActionCreator = (text) =>({type: UPDATER_NEW_MESSAGE, newMessage: text});\r\n\r\n\r\nexport default dialogReducer;","import s from \"../../Dialog.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) =>{\r\n\r\n    return(<div>\r\n        <div className={`${s.message} ${s.home}`}>{props.message}</div>\r\n        <div className={`${s.message} ${s.guest}`}>{props.message}</div>\r\n    </div> );\r\n\r\n};\r\nexport default Message","import s from \"../Dialog.module.css\";\r\nimport React from \"react\";\r\nimport Message from \"./mesage_item/message_item\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {maxLength, required} from \"../../Utils/Validators/validators\";\r\n\r\n\r\n// const Messages = (props) => {\r\n//     // debugger;\r\n//     let newMessageElements = React.createRef();\r\n//\r\n//     // let addMessage = () => {\r\n//     //     let newMess = newMessageElements.current.value;\r\n//     //     alert(newMess)\r\n//     // };\r\n//     let addMessage = () => {\r\n//         props.textAreaValue===\"\" ? alert(\"Не буду публиковать пустой пост\") : props.addMessages();\r\n//     };\r\n//\r\n//     let textAreaChanger = () => {\r\n//         let text = newMessageElements.current.value;\r\n//         return (props.updateNewMessageActionCreator(text));\r\n//     };\r\n//\r\n//     let messages = props.messages.map(m => <Message message={m.message}/>);\r\n//\r\n// };\r\n\r\nlet maxLength50 = maxLength(50);\r\n\r\nlet AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n\r\n            <div>\r\n                <Field component={TextArea}\r\n                       name=\"textareaName\"\r\n                       placeholder=\"Enter you message\"\r\n                       validate={[required, maxLength50]}/>\r\n            </div>\r\n            {/*<textarea onChange={textAreaChanger} ref={newMessageElements} value={props.textAreaValue}/><br/>*/}\r\n            <button/*onClick={addMessage} type=\"submit\"*/>Отправить</button>\r\n        </form>)\r\n};\r\n\r\nAddMessageForm = reduxForm({form: 'dialogMessageForm'})(AddMessageForm);\r\n\r\nconst Messages = (props) => {\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessages(values.textareaName);\r\n    };\r\n    let messages = props.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n    return <div>\r\n        <div className={s.messages}>{messages}</div>\r\n        <AddMessageForm onSubmit={addNewMessage}/>\r\n    </div>\r\n\r\n};\r\nexport default Messages","import {addMessageActionCreator, updateNewMessageActionCreator} from \"../../../Redux/dialog_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Messages from \"./messages\";\r\n\r\n//\r\n// const Messages = (props) => {\r\n//     // debugger;\r\n//\r\n//     // let addMessage = () => {\r\n//     //     let newMess = newMessageElements.current.value;\r\n//     //     alert(newMess)\r\n//     // };\r\n//     let addMessages = () => {\r\n//         props.textAreaValue===\"\" ? alert(\"Не буду публиковать пустой пост\") : props.dispatch(addMessageActionCreator());\r\n//     };\r\n//\r\n//     let textAreaChanger = () => {\r\n//         let text = newMessageElements.current.value;\r\n//         return (props.dispatch(updateNewMessageActionCreator(text)));\r\n//     };\r\n//\r\n//     let messages = props.state.dialogsPage.messages.map(m => <Message message={m.message}/>)\r\n//\r\n//     return (\r\n//         <div>\r\n//             <div className={s.messages}>{messages}</div>\r\n//             <textarea onChange={textAreaChanger} ref={newMessageElements} value={props.textUpdater.dialogsPage.textAreaValue}/><br/>\r\n//             <button onClick={addMessages} type=\"submit\">Отправить</button>\r\n//         </div>)\r\n// };\r\n//\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        textAreaValue: state.dialogsPage.textAreaValue,\r\n        messages:state.dialogsPage.messages\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageActionCreator: (text) => {\r\n            dispatch(updateNewMessageActionCreator(text))\r\n        },\r\n        addMessages: (textareaName) => {\r\n            dispatch(addMessageActionCreator(textareaName));\r\n        }\r\n    }\r\n};\r\n\r\nconst DialogsMessagesContainer = connect(mapStateToProps,mapDispatchToProps)(Messages);\r\n\r\nexport default DialogsMessagesContainer","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport s from \"./item_dialog.module.css\"\r\n\r\nconst Items = (props) =>\r\n    <div className={s.item}>\r\n        <NavLink className={s.imgLink} activeClassName={s.active} to={\"/dialogs/\" + props.link}>{props.img}</NavLink>\r\n        <NavLink className={s.textLink} activeClassName={s.active} to={\"/dialogs/\" + props.link}>{props.name}</NavLink>\r\n    </div>\r\n;\r\n\r\nexport default Items\r\n","import React from \"react\";\r\nimport Item from \"./items/item_dialog\";\r\nimport s from \"./dialog_items.module.css\"\r\n\r\n\r\n\r\nconst Dialogs_items = (props) => {\r\n    let items = props.dialogs.map(i => <Item id={i.id} name={i.name} link={i.link} img={i.img}/>);\r\n\r\n    return (\r\n        <div className={s.items}>\r\n            {items}\r\n        </div>)\r\n};\r\n\r\nexport default Dialogs_items\r\n","import {connect} from \"react-redux\";\r\nimport Dialogs_items from \"./dialog_items\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs:state.dialogsPage.dialogs,\r\n    }\r\n};\r\n\r\nconst DialogsItemsContainer = connect(mapStateToProps)(Dialogs_items);\r\n\r\nexport default DialogsItemsContainer","import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nlet AuthRedirectComponent = /*WithAuthRedirect*/(Dialogs)\r\n\r\nexport default AuthRedirectComponent\r\n\r\n","import React from \"react\";\r\nimport s from \"./Dialog.module.css\"\r\nimport DialogsMessagesContainer from \"./messages/DialogsMessagesContainer\";\r\nimport DialogsItemsContainer from \"./Dialog_Items/DialogsItemsContainer\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    return(\r\n    <div className={s.dialogs}>\r\n        <DialogsItemsContainer/>\r\n        <DialogsMessagesContainer/>\r\n    </div>);\r\n};\r\n\r\nexport default Dialogs","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getProfile, getProfileStatus} from \"../../Redux/profile_selector\";\r\nimport {getAuthUserId} from \"../../Redux/auth_selectors\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfileData, getStatus, savePhoto, saveProfile, updateStatus} from \"../../Redux/profile_reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport s from './profile.module.css'\r\n\r\nfunction ProfileContainerWithHook (props){\r\n\r\n    console.log(\"render\");\r\n\r\n    let userServ = props.match.params.userId;\r\n    let userAuth = props.authorizeUserId;\r\n\r\n\r\n    // let func = () =>{\r\n    //     setUserId(props.match.params.userId) || setUserId(props.authorizeUserId);\r\n    //     props.getProfileData(userId);\r\n    //     props.getStatus(userId)\r\n    // };\r\n\r\n    useEffect(() =>{\r\n\r\n        let userId = userServ;\r\n        if (!userId){\r\n            userId = userAuth;\r\n        }\r\n        props.getProfileData(userId);\r\n        props.getStatus(userId);\r\n    },[props.match.params.userId, props.authorizeUserId]);\r\n\r\n    // let userId = this.props.match.params.userId;\r\n    // if (!userId) {\r\n    //     userId = this.props.authorizeUserId;\r\n    // }\r\n    // this.props.getProfileData(userId);\r\n    // this.props.getStatus(userId);\r\n\r\n\r\n    return (\r\n        <div className={s.profile}>\r\n            <Profile {...props}\r\n                     isOwner={!props.match.params.userId}\r\n                     savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    // console.log(\"mSTP profile\");\r\n    return({\r\n        profile: getProfile(state),\r\n        status: getProfileStatus(state),\r\n        authorizeUserId:getAuthUserId(state)\r\n    })};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getStatus, updateStatus,getProfileData, savePhoto, saveProfile}),\r\n    withRouter,\r\n    /*WithAuthRedirect*/\r\n)(ProfileContainerWithHook)","import React from \"react\";\r\nimport style from \"./Style.module.css\"\r\nimport {Route} from \"react-router-dom\";\r\nimport News from \"./News/News\";\r\nimport Music from \"./Music/Music\";\r\nimport Settings from \"./Settings/Settings\";\r\nimport UsersContainer from \"./Users/UsersContainer\";\r\nimport ProfileContainer from \"./Profile/ProfileContainer\";\r\nimport Login from \"./Login/login\";\r\nimport DialogsContainer from \"./Dialogs/DialogsContainer\";\r\nimport ProfileContainerWithHook from \"./Profile/ProfileContainerWithHook\";\r\nimport EditProfileInfoForm from \"./Profile/LogoInfo/EditProfileInfoForm\";\r\n\r\n\r\nconst Content = () => {\r\n\r\n        return (<div className={style.content}>\r\n            <Route path={\"/dialogs\"} render={() => <DialogsContainer/>}/>\r\n            <Route path={\"/profile/:userId?\"} render={() => <ProfileContainerWithHook/>}/>\r\n            <Route path={\"/users\"} render={() => <UsersContainer/>}/>\r\n            <Route path={\"/news\"} render={() => <News/>}/>\r\n            <Route path={\"/music\"} render={() => <EditProfileInfoForm/>}/>\r\n            <Route path={\"/login\"} render={() => <Login/>}/>\r\n            <Route path={\"/settings\"} render={() => <Settings/>}/>\r\n        </div>)\r\n    }\r\n\r\n;\r\n\r\nexport default Content","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) =>\r\n    <div className={s.header}>\r\n        <NavLink to={\"/home\"}><img src=\"http://pngimg.com/uploads/american_football/american_football_PNG137.png\"\r\n                                   alt=\"\"/></NavLink>\r\n        Header\r\n        <div className={s.login_block}>\r\n            {props.isAuth\r\n                ? <div>{props.login}<br/>{<button onClick={props.logout}>LogOut</button>}</div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n\r\n        </div>\r\n\r\n    </div>;\r\n\r\nexport default Header","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {letsAuth, logout, setAuthUserData} from \"../../Redux/auth_reducer\";\r\n\r\nclass HeaderContainer extends React.Component{\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nconst mapStateToProps=(state) =>({\r\n    isAuth:state.auth.isAuth,\r\n    login:state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps,{logout,letsAuth, setAuthUserData}) (HeaderContainer)","import {letsAuth} from \"./auth_reducer\";\r\n\r\nconst INITIALIZING_SUCCESS = \"INITIALIZING_SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialize: true\r\n};\r\nconst appReducer = (state = initialState, action) => {\r\n    if (action.type === INITIALIZING_SUCCESS) {\r\n        return {\r\n            ...state, initialize: true\r\n        };\r\n    } else {\r\n        return state;\r\n    }\r\n};\r\n\r\nexport const initializeSuccess = () => ({type: INITIALIZING_SUCCESS});\r\n\r\nexport const setInitializeSuccess = () => (dispatch) => {\r\n    let promise = dispatch(letsAuth());\r\n\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializeSuccess())\r\n    });\r\n};\r\n\r\n\r\nexport default appReducer\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navigation from \"./Content/navigation/Navigate\"\r\nimport Content from \"./Content/Content\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport HeaderContainer from \"./Content/Header/HeaderComponent\";\r\nimport {connect} from \"react-redux\";\r\nimport {setInitializeSuccess} from \"./Redux/app_reducer\";\r\nimport Preloader from \"./Content/Common/Preloader/Preloader\";\r\n\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.setInitializeSuccess();\r\n    }\r\n    render() {\r\n        if (!this.props.initialize){\r\n            return <Preloader/>\r\n        }\r\n        return (<HashRouter /*basename={process.env.PUBLIC_URL}*/>\r\n            <div className={'app_wrapper'}>\r\n                <HeaderContainer/>\r\n                <Navigation/>\r\n                <Content/>\r\n            </div>\r\n        </HashRouter>);\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) =>({\r\n    initialize:state.app.initialize\r\n});\r\n\r\nexport default connect(mapStateToProps,{setInitializeSuccess}) (App)\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport dialogReducer from \"./dialog_reducer\";\r\nimport profileReducer from \"./profile_reducer\";\r\nimport usersReducer from \"./users_reducer\";\r\nimport authReducer from \"./auth_reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app_reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogReducer,\r\n    usersPage: usersReducer,\r\n    auth:authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from \"./Redux/redux-store\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__1PsFo\",\"messages\":\"Dialog_messages__33gII\",\"message\":\"Dialog_message__qVZhk\",\"home\":\"Dialog_home__2Un3t\",\"guest\":\"Dialog_guest__L8I1I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imaga\":\"info_logo_imaga__5kUnd\",\"VisibleInputImg\":\"info_logo_VisibleInputImg__dhI18\",\"HiddenInputImg\":\"info_logo_HiddenInputImg__2KKNn\",\"profileName\":\"info_logo_profileName__vezLi\",\"logoInfoContainer\":\"info_logo_logoInfoContainer__3DfWd\",\"infoProfile\":\"info_logo_infoProfile__1zOvz\",\"contacts\":\"info_logo_contacts__jqdF1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"item_dialog_item__dC-KW\",\"textLink\":\"item_dialog_textLink__1pgKC\",\"active\":\"item_dialog_active__2s_53\",\"imgLink\":\"item_dialog_imgLink__1a-WS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"prof\":\"profile_prof__1xAzO\",\"image\":\"profile_image__qnT4o\",\"LogoInfoPosts\":\"profile_LogoInfoPosts__2NqB0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__1FhAV\",\"myPosts\":\"post_myPosts__3iEfK\"};","module.exports = __webpack_public_path__ + \"static/media/png-transparent-computer-icons-user-icon-design-help-portal-computer-orange-sphere.7fc247f2.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"nav_item__3dQhv\",\"active\":\"nav_active__C5w4M\",\"navigat\":\"nav_navigat__-BZYA\",\"imgLink\":\"nav_imgLink__1i3V-\",\"settings\":\"nav_settings__36NUo\",\"friends\":\"nav_friends__3Bg4m\",\"friendsItems\":\"nav_friendsItems__3CDGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__O7Ceu\",\"login_block\":\"Header_login_block__1jdTY\"};"],"sourceRoot":""}